name: CI gated (tests → staging → manual → prod)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

# Avoid overlapping deploys if multiple commits land quickly
concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  HEALTH_PATH: /health         # change if your health route differs
  SMOKE_MAX_WAIT: 300          # seconds to wait for 200
  SMOKE_INTERVAL: 5            # seconds between checks

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - run: npm ci
      - run: npm run test:ci

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    # MUST match your GitHub Environment name exactly
    environment: Staging

    steps:
      - name: Deploy to Render (Staging)
        # DEPLOY_HOOK_URL is the Staging env secret
        run: curl -fsSL -X POST "${{ secrets.DEPLOY_HOOK_URL }}"

      - name: Wait for /health to be 200 (Staging)
        shell: bash
        env:
          # this resolves to the Staging env secret
          APP_BASE_URL: ${{ secrets.APP_BASE_URL }}
          HEALTH_PATH: ${{ env.HEALTH_PATH }}
          SMOKE_MAX_WAIT: ${{ env.SMOKE_MAX_WAIT }}
          SMOKE_INTERVAL: ${{ env.SMOKE_INTERVAL }}
        run: |
          if [ -z "$APP_BASE_URL" ]; then
            echo "APP_BASE_URL secret is empty. Set it to your Render URL, e.g. https://<app>.onrender.com"
            exit 1
          fi
          echo "Probing: ${APP_BASE_URL}${HEALTH_PATH}"

          end=$(( SECONDS + SMOKE_MAX_WAIT ))
          while [ $SECONDS -lt $end ]; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "${APP_BASE_URL}${HEALTH_PATH}" || true)
            echo "HTTP $code"
            if [ "$code" = "200" ]; then
              echo "Staging healthy ✅"
              exit 0
            fi
            sleep "$SMOKE_INTERVAL"
          done

          echo "❌ Staging health check failed after ${SMOKE_MAX_WAIT}s"
          exit 1

  deploy-prod:
    needs: deploy-staging
    runs-on: ubuntu-latest
    timeout-minutes: 15
    # MUST match your GitHub Environment name exactly (approval gate lives here)
    environment: Prod

    steps:
      - name: Deploy to Render (Prod)
        run: curl -fsSL -X POST "${{ secrets.DEPLOY_HOOK_URL }}"

      - name: Wait for /health to be 200 (Prod)
        shell: bash
        env:
          APP_BASE_URL: ${{ secrets.APP_BASE_URL }}
          HEALTH_PATH: ${{ env.HEALTH_PATH }}
          SMOKE_MAX_WAIT: ${{ env.SMOKE_MAX_WAIT }}
          SMOKE_INTERVAL: ${{ env.SMOKE_INTERVAL }}
        run: |
          if [ -z "$APP_BASE_URL" ]; then
            echo "APP_BASE_URL secret is empty (Prod)."
            exit 1
          fi
          echo "Probing: ${APP_BASE_URL}${HEALTH_PATH}"

          end=$(( SECONDS + SMOKE_MAX_WAIT ))
          while [ $SECONDS -lt $end ]; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "${APP_BASE_URL}${HEALTH_PATH}" || true)
            echo "HTTP $code"
            if [ "$code" = "200" ]; then
              echo "Prod healthy ✅"
              exit 0
            fi
            sleep "$SMOKE_INTERVAL"
          done

          echo "❌ Prod health check failed after ${SMOKE_MAX_WAIT}s"
          exit 1
